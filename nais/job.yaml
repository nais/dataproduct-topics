apiVersion: "nais.io/v1"
kind: "Naisjob"
metadata:
  name: "dataproduct-topics-{{ kafka_pool }}"
  namespace: aura
  labels:
    team: aura
spec:
  image: "{{ image }}"
  schedule: "13 4 * * *"
  filesFrom:
    - secret: dataproduct-topics
      mountPath: /var/run/secrets/gcp/

  env:
    - name: POOL_NAME
      value: "{{ kafka_pool }}"
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /var/run/secrets/gcp/sa.json
  {{#if onprem}}
    - name: ONPREM
      value: "true"
    - name: KAFKA_BROKERS
      value: "{{ kafka_brokers }}"
    - name: LINKERD_AWAIT_DISABLED
      value: "no linkerd onprem!"

  webproxy: true
  vault:
    enabled: true
    paths:
      - kvPath: "{{ kafka_serviceuser_vault_path }}"
        mountPath: /var/run/secrets/nais.io/kafka_serviceuser
  {{/if}}

  {{#unless onprem}}
  kafka:
    pool: "{{ kafka_pool }}"
  {{/unless}}

---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: dataproduct-topics
  name: dataproduct-topics
  namespace: aura
type: Opaque
data:
  sa.json: {{ gcp_sa_json_base64 }}

{{#if topic}}
---
apiVersion: kafka.nais.io/v1
kind: Topic
metadata:
  name: "{{ topic }}"
  namespace: aura
  labels:
    team: aura
spec:
  pool: nav-infrastructure
  config:  # optional; all fields are optional too; defaults shown
    cleanupPolicy: delete  # delete, compact, compact,delete
    minimumInSyncReplicas: 1
    partitions: 1
    replication: 2
  acl:
    - team: aura
      application: "dataproduct-topics-{{ kafka_pool }}"
      access: read
{{/if}}